#include <Arduino.h>
#include <Wire.h>
#include <Adafruit_SSD1306.h>

#define MOTOR_R_CW PA_2
#define MOTOR_R_CCW PA_3

#define MOTOR_L_CW PB_8
#define MOTOR_L_CCW PB_9

#define PMWFREQ 2000

#define PotentiometerPin PB0

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
#define OLED_RESET 	-1 // This display does not have a reset pin accessible
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

int speed = 0;

void setup() {
  // put your setup code here, to run once:

  pinMode(PotentiometerPin,INPUT_ANALOG);

  pinMode(MOTOR_R_CW, OUTPUT);
  pinMode(MOTOR_R_CCW, OUTPUT);
  pinMode(MOTOR_L_CW, OUTPUT);
  pinMode(MOTOR_L_CCW, OUTPUT);


  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
 
  // Displays Adafruit logo by default. call clearDisplay immediately if you don't want this.
  display.display();
  delay(2000);
  

}

void loop() {
  // put your main code here, to run repeatedly:

  //Test for driving forwards

  while(speed < 1024){

    display.clearDisplay();
    display.setTextColor(SSD1306_WHITE);
    display.setCursor(0,0);
    display.println("Speed is ");
    display.println(speed);  
    display.display();

    pwm_start(MOTOR_R_CW,PWM_FREQUENCY,speed,RESOLUTION_10B_COMPARE_FORMAT);
    pwm_start(MOTOR_L_CW,PWM_FREQUENCY,speed,RESOLUTION_10B_COMPARE_FORMAT);
    pwm_start(MOTOR_R_CCW,PWM_FREQUENCY,0,RESOLUTION_10B_COMPARE_FORMAT);
    pwm_start(MOTOR_L_CCW,PWM_FREQUENCY,0,RESOLUTION_10B_COMPARE_FORMAT);

    speed = speed + 10;

    delay(293);
  }

  pwm_start(MOTOR_R_CW,PWM_FREQUENCY,0,RESOLUTION_10B_COMPARE_FORMAT);
  pwm_start(MOTOR_L_CW,PWM_FREQUENCY,0,RESOLUTION_10B_COMPARE_FORMAT);
  pwm_start(MOTOR_R_CCW,PWM_FREQUENCY,0,RESOLUTION_10B_COMPARE_FORMAT);
  pwm_start(MOTOR_L_CCW,PWM_FREQUENCY,0,RESOLUTION_10B_COMPARE_FORMAT);
  
  //Test for turning left

  speed = 0;

  while(speed < 1024){

    display.clearDisplay();
    display.setTextColor(SSD1306_WHITE);
    display.setCursor(0,0);
    display.println("Speed is ");
    display.println(speed);  
    display.display();

    pwm_start(MOTOR_R_CW,PWM_FREQUENCY,speed,RESOLUTION_10B_COMPARE_FORMAT);
    pwm_start(MOTOR_L_CW,PWM_FREQUENCY,0,RESOLUTION_10B_COMPARE_FORMAT);
    pwm_start(MOTOR_R_CCW,PWM_FREQUENCY,speed,RESOLUTION_10B_COMPARE_FORMAT);
    pwm_start(MOTOR_L_CCW,PWM_FREQUENCY,0,RESOLUTION_10B_COMPARE_FORMAT);

    speed = speed + 10;

    delay(293);
  }

  pwm_start(MOTOR_R_CW,PWM_FREQUENCY,0,RESOLUTION_10B_COMPARE_FORMAT);
  pwm_start(MOTOR_L_CW,PWM_FREQUENCY,0,RESOLUTION_10B_COMPARE_FORMAT);
  pwm_start(MOTOR_R_CCW,PWM_FREQUENCY,0,RESOLUTION_10B_COMPARE_FORMAT);
  pwm_start(MOTOR_L_CCW,PWM_FREQUENCY,0,RESOLUTION_10B_COMPARE_FORMAT);

  //Test for turning right

  speed = 0;

  while(speed < 1024){

    display.clearDisplay();
    display.setTextColor(SSD1306_WHITE);
    display.setCursor(0,0);
    display.println("Speed is ");
    display.println(speed);  
    display.display();

    pwm_start(MOTOR_R_CW,PWM_FREQUENCY,0,RESOLUTION_10B_COMPARE_FORMAT);
    pwm_start(MOTOR_L_CW,PWM_FREQUENCY,speed,RESOLUTION_10B_COMPARE_FORMAT);
    pwm_start(MOTOR_R_CCW,PWM_FREQUENCY,0,RESOLUTION_10B_COMPARE_FORMAT);
    pwm_start(MOTOR_L_CCW,PWM_FREQUENCY,speed,RESOLUTION_10B_COMPARE_FORMAT);

    speed = speed + 10;

    delay(293);
  }

  
  
  
}
